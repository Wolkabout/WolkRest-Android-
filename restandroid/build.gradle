apply plugin: 'com.android.library'
apply plugin: 'android-apt'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.0"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 24
        versionCode 2
        versionName "1.1.1" // Update readme as well.
    }
    buildTypes {
        release {
            buildConfigField "String", "HOST", "\"https://api.wolksense.com/api\""
        }

        staging {
            buildConfigField "String", "HOST", "\"https://staging.wolksense.com/api\""
        }

        debug {
            buildConfigField "String", "HOST", "\"https://staging.wolksense.com/api\""
        }
    }
}

def AAVersion = '4.0.0'
def springTemplateVersion = "2.0.0.M3";
def jacksonDatabindVersion = "2.7.5";

dependencies {
    // Android annotations
    provided "org.androidannotations:androidannotations:$AAVersion"
    provided "org.androidannotations:rest-spring-api:$AAVersion"
    provided "org.androidannotations:rest-spring:$AAVersion"

    provided "org.springframework.android:spring-android-rest-template:$springTemplateVersion"
    provided "com.fasterxml.jackson.core:jackson-databind:$jacksonDatabindVersion"
}

apt {
    arguments {
        androidManifestFile variant.outputs[0].processResources.manifestFile
        library true
    }
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
}

task androidJavadocsJar(type: Jar) {
    classifier = 'javadoc'
    baseName = 'restandroid'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    baseName = 'restandroid'
    from android.sourceSets.main.java.srcDirs
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'com.wolkabout'
            artifactId 'restandroid'
            version '1.1.0'
            artifact "$buildDir/outputs/aar/restandroid-release.aar"
            artifact androidJavadocsJar
            artifact androidSourcesJar

            //generate pom nodes for dependencies
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.compile.allDependencies.each { dependency ->
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', dependency.group)
                    dependencyNode.appendNode('artifactId', dependency.name)
                    dependencyNode.appendNode('version', dependency.version)
                }
            }
        }
    }

    //publish to filesystem repo
    repositories{
        maven {
            url "$buildDir/repo"
        }
    }
}